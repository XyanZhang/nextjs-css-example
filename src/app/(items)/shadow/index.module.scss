.shadowBox {
  position: relative;
  width: 600px;
  height: 100px;
  background: var(--theme1-2);
  border-radius: 20px;
}

.shadowBox::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 5%;
  right: 5%;
  bottom: 0;
  border-radius: 10px;
  background: var(--theme1-3);
  transform: translate(0, -25%) rotate(-3deg);
  transform-origin: center center;
  box-shadow: 0 0 20px 15px var(--theme1-3);
  z-index: -1;
}
.shadowText {
  font-size: 60px;
  background: #999;
  p {
    color: #999;
    // text-shadow: 1px 1px 1px #000; // 添加阴影
    text-shadow: 1px 1px 1px #fff, -1px -1px 1px #000;
  }
}
.shadowBtn {
  background-color: #fff;
  display: flex;
  text-align: center;
  div {
    cursor: pointer;
    user-select: none;
    margin: 20px;
    border-radius: 20px;
    width: 120px;
    height: 120px;
    background: #e9ecef;
    color: #333;
    box-shadow: 7px 7px 12px rgba(0, 0, 0, 0.4),
      -7px -7px 12px rgba(255, 255, 255, 0.9);
    transition: 0.2s all;
    &:active {
      box-shadow: 0 0 0 rgba(0, 0, 0, 0.4), 0 0 0 rgba(255, 255, 255, 0.9),
        inset -7px -7px 12px rgba(255, 255, 255, 0.9),
        inset 7px 7px 12px rgba(0, 0, 0, 0.4);
    }
  }

  div:nth-child(2) {
    transition: 0.2s all;
    box-shadow: 0 0 0 rgba(0, 0, 0, 0.4), 0 0 0 rgba(255, 255, 255, 0.9),
      inset -7px -7px 12px rgba(255, 255, 255, 0.9),
      inset 7px 7px 12px rgba(0, 0, 0, 0.4);
    &:active {
      box-shadow: 7px 7px 12px rgba(0, 0, 0, 0.4),
        -7px -7px 12px rgba(255, 255, 255, 0.9);
    }
  }
}

$img: '/avatar-color.jpeg';
.colorShadow {
  width: 200px;
  height: 200px;
  display: flex;
  justify-content: center;
}
.avator {
  position: relative;
  display: block;
  width: 100px;
  height: 100px;
  border-radius: 50%;
  background: url($img) no-repeat center center;
  background-size: cover;

  &::after {
    content: '';
    position: absolute;
    top: 10%;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background: inherit;
    background-size: 100% 100%;
    filter: blur(10px) brightness(80%) opacity(0.8);
    z-index: -1;
  }
}
.circleShadow {
  background-color: #000;
  // width: 120px;
  // height: 120px;
  position: relative;
  .cicleColor {
    border: 1px solid #fff;
    box-sizing: border-box;
    border-radius: 50%;
    width: 100px;
    height: 100px;
    background-image: conic-gradient(
      #ff4d00,
      #ffe600,
      #80ff00,
      #00ff1a,
      #00ffb3,
      #00b3ff,
      #001aff,
      #8000ff,
      #ff00e6,
      #ff004d 20%,
      transparent 20.5%,
      transparent
    );
    // #3d3d3d
    // filter: blur(2px);
    animation: rotateColor 2s linear infinite;
    // animation: crack2 1.5s linear forwards;
  }
}
@keyframes rotateColor {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.circleBlack {
  border-radius: 50%;
  display: block;
  width: 96px;
  height: 96px;
  left: 2px;
  top: 2px;
  position: absolute;
  background-color: #000;
  z-index: 10;
}

.copyBox {
  width: 40px;
  height: 40px;
  border: 1px solid #333;
  box-sizing: border-box;
  box-shadow: 40px 40px 0 0 #000;
}
.copyDot {
  position: relative;
  line-height: 80px;
  &::before,
  &::after {
    content: '';
    position: absolute;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: #000;
    left: -20px;
    top: 50%;
    transform: translate(0, -50%);
    box-shadow: -20px 0 #000, -40px 0 #000;
  }

  &::after {
    left: unset;
    right: -60px;
    box-shadow: 20px 0 #000, 40px 0, #000;
  }
}
.cloud {
  cursor: pointer;
  width: 100px;
  height: 100px;
  background: #999;
  border-radius: 50%;
  box-shadow: 120px 0px 0 -10px #999, 95px 20px 0 0px #999,
    30px 30px 0 -10px #999, 90px -20px 0 0px #999, 40px -40px 0 0px #999;
}
.multiBox {
  width: 120px;
  height: 60px;
  background: cyan;
  box-shadow: inset 0 0 0 6px var(--theme1), 0 0 0 10px var(--theme1-2),
    0 0 0 15px var(--theme1-3), 0 2px 5px 15px #666;
}
.clickBtn {
  width: 120px;
  height: 64px;
  background: #fc0;
  border-radius: 20px;
  border: 5px solid #333;
  box-shadow: inset 0 -5px 0 #aaa, inset 0 -10px 0 #000;
}
.declineCircle {
  width: 120px;
  height: 120px;
  border-radius: 50%;
  border: 2px solid var(--theme1);
  box-shadow: inset 0 12px 0 13px var(--theme1);
  transform: rotate(-35deg);
  transform: perspective(1000px) rotateX(60deg) rotateY(135deg);
}

.declineCircle2 {
  width: 100px;
  height: 60px;
  border-radius: 100%;
  box-shadow: inset 0 5px 0 6px #09c;
  transform: rotate(-40deg);
}

@function shadowSet($vx, $vy, $color) {
  $shadow: 0 0 0 0 $color;

  @for $i from 0 through 100 {
    $x: calc(2 * sin(#{$i * 15 * 1deg}) * #{$vy});
    $y: $i * $vy;
    $shadow: $shadow, #{$y} #{$x} 0 0 $color;
  }

  @return $shadow;
}

.curve {
  margin: auto;
  width: 5px;
  height: 5px;
  border-radius: 50%;
  animation: move 3s infinite linear;
  background: #f00;
  box-shadow: shadowSet(1px, 1px, #f00);
}

.hoverModal {
  width: 200px;
  height: 60px;
  transition: all 0.2s;
  &:hover {
    box-shadow: 0 0 0 100vmax rgba(0, 0, 0, 0.5); // 100vmax 为最大的视口宽度
  }
}

.colorLight {
  color: #fff;
  transition: 0.2s;

  // 只需要设置 3~n 层阴影效果，每一层的模糊半径（文字阴影的第三个参数）间隔较大，并且每一层的阴影颜色相同
  &:hover {
    text-shadow: 0 0 10px #0ebeff, 0 0 20px #0ebeff, 0 0 50px #0ebeff,
      0 0 100px #0ebeff, 0 0 200px #0ebeff;
  }
}

.textColor {
  color: #333;
  &:hover span {
    animation: flicker 3s linear forwards;
  }
  &:hover span:nth-child(2) {
    animation-delay: 0.5s;
  }
  &:hover span:nth-child(3)  {
    animation-delay: 1s;
  }
  &:hover span:nth-child(4) {
    animation-delay: 1.5s;
  }
}
@keyframes flicker {
  0% {
    color: #333;
  }
  5%,
  15%,
  25%,
  30%,
  100% {
    color: #fff;
    text-shadow: 0px 0px 5px var(--theme1-2), 0px 0px 10px var(--theme1-2),
      0px 0px 20px var(--theme1-2), 0px 0px 50px var(--theme1-2);
  }
  10%,
  20% {
    color: #333;
    text-shadow: none;
  }
}
